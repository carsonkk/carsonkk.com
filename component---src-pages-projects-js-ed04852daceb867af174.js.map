{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/ImagePreview.js","webpack:///./src/components/ImagePreviewCollection.js"],"names":["ProjectsPage","render","edges","this","props","data","allMarkdownRemark","ShadowWrapper","Styled","div","withConfig","displayName","componentId","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_BaseLayout__WEBPACK_IMPORTED_MODULE_4__","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","pathname","location","title","description","_rebass_grid__WEBPACK_IMPORTED_MODULE_3__","flexDirection","width","_components_ImagePreviewCollection__WEBPACK_IMPORTED_MODULE_6__","React","Component","pageQuery","ImagePreview","_this","_React$Component","call","ang","RandomAngle","state","angle","percents","AngleToPercents","lightColor","RandomColor","darkColor","duration","RandomRange","_this$props","image","frontmatter","slug","fields","icon","ImagePreviewWrapper","Box","PostPreview","DarkTheme","text","PostTitle","h2","BackgroundFilter","Description","Icon","breathing","keyframes","BackgroundImage","react_default","gatsby_image_default","fluid","alt","gatsby_browser_entry","to","index_es","propTypes","PropTypes","object","isRequired","array","ImagePreviewCollection","previews","map","edge","i","banner","node","len","length","mod","components_ImagePreview","key","childImageSharp","dist","flexWrap"],"mappings":"2NASMA,4FACJC,OAAA,WAAS,IACCC,EAAUC,KAAKC,MAAMC,KAAKC,kBAA1BJ,MACFK,EAAgBC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,YAAGJ,CAAH,uFAQnB,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,SAAUf,KAAKC,MAAMe,SAASD,SAC9BE,MAAM,WACNC,YAAY,uBAEdR,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,cAAc,SAASC,MAAO,GAClCX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAwBvB,MAAOA,IAC/BW,EAAAC,EAAAC,cAACR,EAAD,YApBiBmB,IAAMC,WA2BlB3B,YAER,IAAM4B,EAAS,kKC5BhBC,cACJ,SAAAA,EAAYzB,GAAO,IAAA0B,EACjBA,EAAAC,EAAAC,KAAA7B,KAAMC,IAAND,KACA,IAAM8B,EAAMC,cAFK,OAGjBJ,EAAKK,MAAQ,CACXC,MAAOH,EACPI,SAAUC,aAAiBL,EAAI,IAAI,KACnCM,WAAYC,cACZC,UAAWD,cACXE,SAAUC,YAAY,EAAG,IARVb,8BAYnB7B,OAAA,WAAS,IAAA2C,EACwBzC,KAAKC,MAA5BC,EADDuC,EACCvC,KAAMmB,EADPoB,EACOpB,MAAOqB,EADdD,EACcC,MACbC,EAAwBzC,EAAxByC,YACAC,EADwB1C,EAAX2C,OACbD,KACA3B,EAA6B0B,EAA7B1B,MAAO6B,EAAsBH,EAAtBG,KAAM5B,EAAgByB,EAAhBzB,YAEf6B,EAAsB1C,kBAAO2C,OAAVzC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAGJ,CAAH,0dAgCnB4C,EAAc5C,UAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,+IAUN6C,IAAUC,MAEfC,EAAY/C,UAAOgD,GAAV9C,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,kLAYTiD,EAAmBjD,UAAOC,IAAVC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,uHAUhBkD,EAAclD,UAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,wMAeXmD,EAAOnD,UAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,6IASJoD,EAAYC,oBAAH,8GAEW1D,KAAKgC,MAAME,SAAS,GAAOlC,KAAKgC,MAAME,SAAS,GAG/ClC,KAAKgC,MAAME,SAAS,GAAOlC,KAAKgC,MAAME,SAAS,GAG/ClC,KAAKgC,MAAME,SAAS,GAAOlC,KAAKgC,MAAME,SAAS,IAGnEyB,EAAkBjB,EAAQrC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,+FAQ3BA,UAAOC,IARoBC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAQ3BJ,CAR2B,uHAUGL,KAAKgC,MAAMC,MAAajC,KAAKgC,MAAMI,WAAepC,KAAKgC,MAAMM,UAE9EmB,EAAazD,KAAKgC,MAAMO,UAGvC,OACEqB,EAAAjD,EAAAC,cAACmC,EAAD,CAAqB1B,MAAO,CAAC,EAAG,EAAG,EAAGA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAC9DuC,EAAAjD,EAAAC,cAAC+C,EAAD,KACGjB,GACCkB,EAAAjD,EAAAC,cAACiD,EAAAlD,EAAD,CAAKmD,MAAOpB,EAAOqB,IAAI,mBAG3BH,EAAAjD,EAAAC,cAAC0C,EAAD,MACAM,EAAAjD,EAAAC,cAACoD,EAAA,KAAD,CAAMC,GAAIrB,GACRgB,EAAAjD,EAAAC,cAACqC,EAAD,KACEW,EAAAjD,EAAAC,cAACwC,EAAD,KAAYnC,GACZ2C,EAAAjD,EAAAC,cAAC2C,EAAD,KACEK,EAAAjD,EAAAC,cAAA,YAAOM,IAET0C,EAAAjD,EAAAC,cAAC4C,EAAD,KACEI,EAAAjD,EAAAC,cAACsD,EAAA,EAAD,CAAiBpB,KAAMA,YAtJVvB,IAAMC,WA+JjCE,EAAayC,UAAY,CACvBjE,KAAMkE,IAAUC,OAAOC,WACvBjD,MAAO+C,IAAUG,MAAMD,WACvB5B,MAAO0B,IAAUC,QAGJ3C,QCzKT8C,4FACJ1E,OAAA,WAAS,IACCC,EAAUC,KAAKC,MAAfF,MACF0E,EAAW1E,EAAM2E,IAAI,SAACC,EAAMC,GAAM,IAC9BC,EAAWF,EAAKG,KAAKnC,YAArBkC,OACFE,EAAMhF,EAAMiF,OACZC,EAAMF,EAAI,EACZ1D,EAAQ,CAAC,GAAK,EAAE,GAEpB,GAAGuD,GAAKG,EAAI,EACV,GAAGH,IAAMG,EAAI,EACX,OAAQE,GACN,KAAK,EAGL,KAAK,EACH5D,EAAQ,CAAC,GAAK,SAMf,GAAGuD,IAAMG,EAAI,EAChB,OAAOE,GACL,KAAK,EACH5D,EAAQ,CAAC,EAAG,GACZ,MACF,KAAK,EACHA,EAAQ,CAAC,GAAK,IACd,MACF,KAAK,EACHA,EAAQ,CAAC,EAAG,EAAE,GACd,MACF,KAAK,EACHA,EAAQ,CAAC,GAAK,GACd,MACF,KAAK,EACHA,EAAQ,CAAC,EAAG,IAQpB,OAAOuC,EAAAjD,EAAAC,cAACsE,EAAD,CAAcC,IAAKP,EAAG1E,KAAMyE,EAAKG,KAAMzD,MAAOA,EAAOqB,MAAOmC,EAASA,EAAOO,gBAAgBtB,MAAQ,SAG7G,OACEF,EAAAjD,EAAAC,cAACyE,EAAA,KAAD,CAAMC,SAAS,OAAOjE,MAAO,GAC1BoD,OAlD4BlD,IAAMC,WAwD3CgD,EAAuBL,UAAY,CACjCpE,MAAOqE,IAAUG,MAAMD,YAGVE","file":"component---src-pages-projects-js-ed04852daceb867af174.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Styled from 'styled-components'\nimport { Flex } from '@rebass/grid'\n\nimport BaseLayout from '../components/BaseLayout'\nimport SEO from '../components/SEO'\nimport ImagePreviewCollection from '../components/ImagePreviewCollection'\n\nclass ProjectsPage extends React.Component {\n  render() {\n    const { edges } = this.props.data.allMarkdownRemark\n    const ShadowWrapper = Styled.div`\n      flex: 1;\n      position: relative;\n      z-index: 1;\n      min-height: 1em;\n      box-shadow: 0em 0em 1em 0 black;\n    `\n\n    return (\n      <BaseLayout>\n        <SEO\n          pathname={this.props.location.pathname}\n          title='Projects'\n          description=\"Projects I've made\"\n        />\n        <Flex flexDirection=\"column\" width={1}>\n          <ImagePreviewCollection edges={edges}/>\n          <ShadowWrapper/>\n        </Flex>\n      </BaseLayout>\n    )\n  }\n}\n\nexport default ProjectsPage\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: {fields: {type: {eq: \"project\"} kind: {eq: \"page\"}} frontmatter: {draft: {ne: true}}}\n      sort: {order: ASC, fields: [fields___slug]}\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            banner: banner {\n              childImageSharp {\n                fluid(maxWidth: 1800, maxHeight: 300, cropFocus: CENTER) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            icon\n            title\n            description\n            draft\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\nimport { Link } from 'gatsby'\nimport Styled, { keyframes } from 'styled-components'\nimport { Box } from '@rebass/grid'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { DarkTheme, RandomRange, RandomColor, RandomAngle, AngleToPercents } from '../utils/Theme'\n\nclass ImagePreview extends React.Component {\n  constructor(props) {\n    super(props)\n    const ang = RandomAngle()\n    this.state = {\n      angle: ang,\n      percents: AngleToPercents((ang+45)%360),\n      lightColor: RandomColor(),\n      darkColor: RandomColor(),\n      duration: RandomRange(4, 8)\n    }\n  }\n\n  render() {\n    const { data, width, image } = this.props\n    const { frontmatter, fields } = data\n    const { slug } = fields\n    const { title, icon, description } = frontmatter\n\n    const ImagePreviewWrapper = Styled(Box)`\n      transition: all 0.3s;\n      position: relative;\n      overflow: hidden;\n      min-height: 15em;\n      :hover {\n        > div:first-child {\n          filter: blur(0);\n          transform: scale(1.1);\n        }\n        > div:nth-child(2) {\n          opacity: 0.5;\n        }\n        > a > div:last-child > h2 {\n          transition-delay: 0s;\n          transition-timing-function: ease-out;\n          top: 0.25em;\n          transform: translate(-50%, 0.25em);\n        }\n        > a > div:last-child > div:nth-child(2) {\n          transition-delay: 0.1s;\n          opacity: 1;\n        }\n        > a > div:last-child > div:last-child {\n          transition: opacity 0.4s;\n          opacity: 1;\n        }\n      }\n      * {\n        backface-visibility: hidden;\n      }\n    `\n    const PostPreview = Styled.div`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      color: ${DarkTheme.text};\n    `\n    const PostTitle = Styled.h2`\n      transition: all 0.3s;\n      transition-delay: 0.1s;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: calc(100% - 2em);\n      margin: 0;\n      padding: 0 1em;\n      text-align: center;\n    `\n    const BackgroundFilter = Styled.div`\n      transition: opacity 0.3s;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      opacity: 0.7;\n      background-color: black;\n    `\n    const Description = Styled.div`\n      transition: opacity 0.3s;\n      transition-delay: 0s;\n      flex-grow: 1;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 0 1em;\n      opacity: 0;\n      font-size: 1.25em;\n      text-align: center;\n      span {\n        font-style: italic;\n      }\n    `\n    const Icon = Styled.div`\n      transition: opacity 0.3s;\n      position: absolute;\n      bottom: 0.125em;\n      right: 0.25em;\n      transform: translate(-0.25em, -0.125em);\n      opacity: 0;\n      font-size: 2.25em;\n    `\n    const breathing = keyframes`\n      0% { \n        background-position:${this.state.percents[0]}% ${this.state.percents[1]}%;\n      }\n      50% { \n        background-position:${this.state.percents[2]}% ${this.state.percents[3]}%;\n      }\n      100% { \n        background-position:${this.state.percents[0]}% ${this.state.percents[1]}%;\n      }\n    `\n    const BackgroundImage = image ? Styled.div`\n      transition: transform 0.4s, filter 0.6s;\n      filter: blur(0.5rem);\n      height: 100%;\n      > div {\n        height: 100%;\n      }\n    `\n    : Styled.div`\n      height: 100%;\n      background: linear-gradient(${this.state.angle}deg, ${this.state.lightColor}, ${this.state.darkColor});\n      background-size: 400% 400%;\n      animation: ${breathing} ${this.state.duration}s ease infinite;\n    `\n\n    return (\n      <ImagePreviewWrapper width={[1, 1, 1, width[0], width[0], width[1]]}>\n        <BackgroundImage>\n          {image && \n            <Img fluid={image} alt=\"Image Preview\"/>\n          }\n        </BackgroundImage>\n        <BackgroundFilter/>\n        <Link to={slug}>\n          <PostPreview>\n            <PostTitle>{title}</PostTitle>\n            <Description>\n              <span>{description}</span>\n            </Description>\n            <Icon>\n              <FontAwesomeIcon icon={icon}/>\n            </Icon>\n          </PostPreview>\n        </Link>\n      </ImagePreviewWrapper>\n    )\n  }\n}\n\nImagePreview.propTypes = {\n  data: PropTypes.object.isRequired,\n  width: PropTypes.array.isRequired,\n  image: PropTypes.object\n}\n\nexport default ImagePreview\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Flex } from '@rebass/grid'\n\nimport ImagePreview from '../components/ImagePreview'\n\nclass ImagePreviewCollection extends React.Component {\n  render() {\n    const { edges } = this.props\n    const previews = edges.map((edge, i) => {\n      const { banner } = edge.node.frontmatter\n      const len = edges.length\n      const mod = len%6\n      let width = [1/2, 1/3]\n\n      if(i >= len-2) {\n        if(i === len-2) {\n          switch (mod) {\n            case 2:\n              width = [1/2, 1/2]\n              break;\n            case 5:\n              width = [1/2, 1/2]\n              break;\n            default:\n              break;\n          }\n        }\n        else if(i === len-1) {\n          switch(mod) {\n            case 1:\n              width = [1, 1]\n              break;\n            case 2:\n              width = [1/2, 1/2]\n              break;\n            case 3:\n              width = [1, 1/3]\n              break;\n            case 4:\n              width = [1/2, 1]\n              break;\n            case 5:\n              width = [1, 1/2]\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      return(<ImagePreview key={i} data={edge.node} width={width} image={banner ? banner.childImageSharp.fluid : null}/>)\n    })\n\n    return (\n      <Flex flexWrap=\"wrap\" width={1}>\n        {previews}\n      </Flex>\n    )\n  }\n}\n\nImagePreviewCollection.propTypes = {\n  edges: PropTypes.array.isRequired\n}\n\nexport default ImagePreviewCollection\n"],"sourceRoot":""}
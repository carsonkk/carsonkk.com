{"version":3,"sources":["webpack:///./src/pages/articles.js","webpack:///./src/components/MetaText.js","webpack:///./src/components/SmartLink.js","webpack:///./src/utils/Date.js","webpack:///./src/components/TextPreview.js"],"names":["dummyResult","id","timeToRead","excerpt","fields","type","kind","slug","frontmatter","created","updated","title","topic","icon","tags","description","draft","ArticlesPage","props","_this","_React$Component","call","this","state","offset","handlePageClick","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","data","initialPos","window","pageYOffset","setState","Math","ceil","selected","scrollTo","render","paginatedResults","allMarkdownRemark","edges","map","edge","node","length","concat","Array","fill","ArticlesPageWrapper","Styled","div","withConfig","displayName","componentId","ArticlesWrapper","SearchFooter","PaginateWrapper","theme","text","primary","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_BaseLayout__WEBPACK_IMPORTED_MODULE_8__","_components_SEO__WEBPACK_IMPORTED_MODULE_9__","pathname","location","_rebass_grid__WEBPACK_IMPORTED_MODULE_5__","flexDirection","width","ResMinWidthEm","s","mx","px","py","_components_TextPreview__WEBPACK_IMPORTED_MODULE_10__","react_paginate__WEBPACK_IMPORTED_MODULE_7___default","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","forcePage","activeClassName","previousLabel","nextLabel","React","Component","pageQuery","MetaText","_this$props","className","texts","links","linkStates","iconType","isInline","caption","MetaLink","SmartLink","contents","i","divider","react__WEBPACK_IMPORTED_MODULE_1___default","key","to","linkState","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","fixedWidth","src","alt","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","defaultProps","propTypes","PropTypes","oneOf","isRequired","array","bool","intRel","extRel","SmartLinkWrapper","span","LinkStyle","color","accent","gatsby__WEBPACK_IMPORTED_MODULE_3__","getProps","_ref","isPartiallyCurrent","rel","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_4__","href","target","string","object","__webpack_require__","d","__webpack_exports__","FancyDateMDY","months","TZDate","date","dateObj","Date","getTime","getTimezoneOffset","DayOrdinal","n","fancyDate","getMonth","getDate","getFullYear","TextPreview","_this$props$data","TextPreviewWrapper","Title","PreviewDescription","react__WEBPACK_IMPORTED_MODULE_2___default","_components_MetaText__WEBPACK_IMPORTED_MODULE_6__","_","capitalize","parse","tag"],"mappings":"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","file":"component---src-pages-articles-js-9f37a9654a548cfe6ffb.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Styled from 'styled-components'\nimport { Flex } from '@rebass/grid'\nimport { ResMinWidthEm } from '../utils/Responsive'\nimport ReactPaginate from 'react-paginate'\n\nimport BaseLayout from '../components/BaseLayout'\nimport SEO from '../components/SEO'\nimport TextPreview from '../components/TextPreview'\n\nconst perPage = 5\nconst dummyResult = {\n  id: '',\n  timeToRead: 0,\n  excerpt: '',\n  fields: {\n    type: 'dummy',\n    kind: 'page',\n    slug: ''\n  },\n  frontmatter: {\n    created: '',\n    updated: '',\n    title: '',\n    topic: '',\n    icon: 'code',\n    tags: [],\n    description: '',\n    draft: false\n  }\n}\n\nclass ArticlesPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      offset: 0\n    }\n    this.handlePageClick = this.handlePageClick.bind(this)\n  }\n\n  handlePageClick(data) {\n    const initialPos = window.pageYOffset\n    this.setState({\n      offset: Math.ceil(data.selected*perPage)\n    }, () => {window.scrollTo(0, initialPos)})\n  }\n\n  render() {\n    const { offset } = this.state\n    const { edges } = this.props.data.allMarkdownRemark\n    let paginatedResults = edges.map(edge => edge.node)\n    if(paginatedResults.length%perPage !== 0 || paginatedResults.length === 0) {\n      paginatedResults = paginatedResults.concat(Array(perPage-(paginatedResults.length%perPage)).fill(dummyResult))\n    }\n\n    const ArticlesPageWrapper = Styled.div`\n      width: 100%;\n    `\n    const ArticlesWrapper = Styled.div`\n      > div:nth-child(1) {\n        display: ${paginatedResults[offset].fields.type === 'dummy' ? 'none' : 'block'};\n      }\n      > div:nth-child(2) {\n        display: ${paginatedResults[offset+1].fields.type === 'dummy' ? 'none' : 'block'};\n      }\n      > div:nth-child(3) {\n        display: ${paginatedResults[offset+2].fields.type === 'dummy' ? 'none' : 'block'};\n      }\n      > div:nth-child(4) {\n        display: ${paginatedResults[offset+3].fields.type === 'dummy' ? 'none' : 'block'};\n      }\n      > div:nth-child(5) {\n        display: ${paginatedResults[offset+4].fields.type === 'dummy' ? 'none' : 'block'};\n      }\n    `\n    const SearchFooter = Styled.div`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    `\n    const PaginateWrapper = Styled.div`\n      width: 100%;\n      ul {\n        display: flex;\n        justify-content: center;\n        list-style-type: none;\n        margin: 0.5em 0;\n        padding: 0.375em 0 0.5em 0;\n        overflow: hidden;\n        li {\n          display: flex;\n          :focus {\n            outline: none;\n          }\n          a {\n            transition: all 0.3s;\n            margin: 0;\n            padding: 0.125em 0.375em;\n            border: none;\n            border-radius: 0.25em;\n            font-size: 1.5em;\n            color: ${props => props.theme.text};\n            background-color: transparent;\n            :focus {\n              outline: none;\n            }\n            :hover {\n              color: ${props => props.theme.primary};\n              background-color: ${props => props.theme.text};\n            }\n            ::before {\n              background-color: transparent;\n            }\n          }\n        }\n        .active {\n          a {\n            font-weight: bold;\n            color: ${props => props.theme.primary};\n            background-color: ${props => props.theme.text};\n          }\n        }\n        .previous {\n          flex: 1 0 auto;\n          margin-right: 2em;\n          font-weight: bold;\n          a {\n            padding-top: 0.05em;\n          }\n        }\n        .next {\n          flex: 1 0 auto;\n          justify-content flex-end;\n          margin-left: 2em;\n          font-weight: bold;\n          a {\n            padding-top: 0.05em;\n          }\n        }\n      }\n    `\n\n    return (\n      <BaseLayout>\n        <SEO\n          pathname={this.props.location.pathname}\n          title='Articles'\n          description=\"Articles I've written\"\n        />\n        <ArticlesPageWrapper>\n          <Flex flexDirection=\"column\" width={[1, 1, 1, 1, ResMinWidthEm.s]} mx=\"auto\" px={[4, 5, 6, 6, 0]} py={5}>\n            <ArticlesWrapper>\n              <TextPreview data={paginatedResults[offset]}/>\n              <TextPreview data={paginatedResults[offset+1]}/>\n              <TextPreview data={paginatedResults[offset+2]}/>\n              <TextPreview data={paginatedResults[offset+3]}/>\n              <TextPreview data={paginatedResults[offset+4]}/>\n            </ArticlesWrapper>\n            <SearchFooter>\n              <PaginateWrapper>\n                <ReactPaginate \n                  pageCount={Math.ceil(paginatedResults.length/perPage)}\n                  marginPagesDisplayed={1}\n                  pageRangeDisplayed={2}\n                  onPageChange={this.handlePageClick}\n                  forcePage={offset/perPage}\n                  activeClassName={'active'}\n                  previousLabel={'prev'}\n                  nextLabel={'next'}\n                />\n              </PaginateWrapper>\n            </SearchFooter>\n          </Flex>\n        </ArticlesPageWrapper>\n      </BaseLayout>\n    )\n  }\n}\n\nexport default ArticlesPage\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: {fields: {type: {eq: \"article\"} kind: {eq: \"page\"}} frontmatter: {draft: {ne: true}}}\n      sort: {order: DESC, fields: [frontmatter___created]}\n    ) {\n      edges {\n        node {\n          ...TextPreviewFragment\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport PropTypes from 'prop-types'\nimport Styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport SmartLink from './SmartLink'\n\n\nclass MetaText extends React.Component {\n  render() {\n    const { className, type, icon, texts, links, linkStates, iconType, isInline } = this.props\n\n    const MetaText = Styled.div`\n      display: ${isInline ? 'inline-flex' : 'flex'};\n      padding: 0.25em ${isInline ? '1em' : '0'} 0.25em 0;\n      font-size: 0.875em;\n      color: ${props => props.theme.caption};\n      svg, img {\n        padding-right: 0.375em;\n      }\n    `\n    const MetaLink = Styled(SmartLink)`\n      && {\n        a {\n          transition: all 0.3s;\n          color: ${props => props.theme.caption};\n          :hover {\n            color: ${props => props.theme.text};\n          }\n          ::before {\n            background-color: ${props => props.theme.text};\n          }\n        }\n      }\n    `\n\n    const contents = texts.map((text, i) => {\n      let divider = ''\n      if(i < texts.length-1) {\n        divider = <span>, </span>\n      }\n      if(type === 'text') {\n        return (\n          <span key={i}>\n            {text}{divider}\n          </span>\n        )\n      }\n      else {\n        return (\n          <span key={i}>\n            <MetaLink className={className} type={type} to={links[i]} text={text} linkState={linkStates[i]}/>{divider}\n          </span>\n        )\n      }\n    })\n\n    return (\n      <MetaText className={className}>\n        <div>\n          {iconType === 'fa' &&\n            <FontAwesomeIcon icon={icon} fixedWidth/>\n          }\n          {iconType === 'svg' &&\n            <object data={icon[0]} type=\"image/svg+xml\">\n              <img src=\"../images/favicon.png\" alt=\"favicon\"/>\n            </object>\n          }\n          {iconType === 'img' &&\n            <img src={icon[0]} alt=\"\"/>\n          }\n          {iconType === 'gimg' &&\n            <Img fluid={icon[0]} alt=\"\"/>\n          }\n        </div>\n        <div>\n          {contents}\n        </div>\n      </MetaText>\n    )\n  }\n}\n\nMetaText.defaultProps = {\n  icon: [],\n  links: [],\n  linkStates: [],\n  iconType: 'fa',\n  isInline: false\n}\n\nMetaText.propTypes = {\n  type: PropTypes.oneOf([\n    'text',\n    'internal',\n    'external'\n  ]).isRequired,\n  texts: PropTypes.array.isRequired,\n  icon: PropTypes.array,\n  links: PropTypes.array,\n  linkStates: PropTypes.array,\n  iconType: PropTypes.oneOf([\n    'none',\n    'fa',\n    'svg',\n    'img',\n    'gimg'\n  ]),\n  isInline: PropTypes.bool\n}\n\nexport default MetaText","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\nimport Styled from 'styled-components'\n\nimport { LinkStyle } from '../utils/Text'\n\n\nclass SmartLink extends React.Component {\n  render() {\n    const { className, type, to, text, title, linkState, intRel, extRel } = this.props\n\n    const SmartLinkWrapper = Styled.span`\n      ${LinkStyle}\n      a {\n        transition: all 0.3s;\n        color: ${props => props.theme.color};\n        :hover {\n          color: ${props => props.theme.accent};\n        }\n        ::before {\n          background-color: ${props => props.theme.accent};\n        }\n      }\n    `\n    \n    return (\n      <SmartLinkWrapper className={className}>\n        {type === 'internal' &&\n          <Link to={to} title={title} getProps={({isPartiallyCurrent}) => {return isPartiallyCurrent ? {className: \"active\"} : null}} state={linkState} rel={intRel}>\n            {text}\n          </Link>\n        }\n        {type === 'external' &&\n          <OutboundLink href={to} title={title} target=\"_blank\" rel={extRel}>\n            {text}\n          </OutboundLink>\n        }\n      </SmartLinkWrapper>\n    )\n  }\n}\n\nSmartLink.defaultProps = {\n  title: '',\n  linkState: {},\n  intRel: '',\n  extRel: 'external nofollow noopener noreferrer'\n}\n\nSmartLink.propTypes = {\n  type: PropTypes.oneOf([\n    'internal',\n    'external'\n  ]).isRequired,\n  to: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  linkState: PropTypes.object,\n  intRel: PropTypes.string,\n  extRel: PropTypes.string\n}\n\nexport default SmartLink\n","const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\nfunction TZDate(date) {\n  const dateObj = new Date(date)\n  const offset = -60000;\n  return new Date(dateObj.getTime() - dateObj.getTimezoneOffset() * offset)\n}\n\nfunction DayOrdinal(n) {\n  return n + (n > 0 ? ['th', 'st', 'nd', 'rd'][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10] : '');\n}\n\nexport function FancyDateMDY(date) {\n  const fancyDate = TZDate(date)\n  return `${months[fancyDate.getMonth()]} ${DayOrdinal(fancyDate.getDate())}, ${fancyDate.getFullYear()}`\n}\n\nexport function FancyDateMD(date) {\n  const fancyDate = TZDate(date)\n  return `${months[fancyDate.getMonth()]} ${DayOrdinal(fancyDate.getDate())}`\n}","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport _ from 'lodash'\nimport Styled from 'styled-components'\n\nimport MetaText from '../components/MetaText'\nimport { FancyDateMDY } from '../utils/Date'\n\nclass TextPreview extends React.Component {\n  render() {\n    // eslint-disable-next-line\n    const { frontmatter, fields, id, timeToRead, excerpt } = this.props.data\n    const { type, slug } = fields\n    const { created, title, topic, icon, tags, description } = frontmatter\n    \n    const TextPreviewWrapper = Styled.div`\n      margin-bottom: 2em;\n    `\n    const Title = Styled.div`\n      line-height: 1;\n      a {\n        display: inline-flex;\n        line-height: 1.5;\n        :hover {\n          div {\n            transform: scaleY(0.9);\n          }\n        }\n        div {\n          transition: transform 0.3s;\n          transform-origin: top;\n          transform: scaleY(0);\n          width: 0.25rem;\n          margin-left: -1em;\n          margin-right: 0.75em;\n          background-color: ${props => props.theme.text};\n        }\n      }\n      h4 {\n        margin-bottom: 0.125em;\n      }\n    `\n    const PreviewDescription = Styled.div`\n      margin-top: 0.375em;\n    `\n\n    return (\n      <TextPreviewWrapper key={id}>\n        {title && slug &&\n          <Title>\n            <Link to={`${slug}`}>\n              <div></div>\n              <h4>{title}</h4>\n            </Link>\n          </Title>\n        }\n        {type && topic && icon && \n          <MetaText\n            type='text'\n            icon={['fas', icon]}\n            texts={[`${topic} ${_.capitalize(type)}`]}\n            isInline={true}\n          />\n        }\n        {created &&\n          <MetaText\n            type='text'\n            icon={['far', 'calendar-alt']}\n            texts={[FancyDateMDY(Date.parse(created))]}\n            isInline={true}\n          />\n        }\n        {timeToRead &&\n          <MetaText\n            type='text'\n            icon={['far', 'clock']}\n            texts={[`${timeToRead} min read`]}\n            isInline={true}\n          />\n        }\n        {tags && \n          <MetaText\n            type='internal'\n            icon={['fas', 'tags']}\n            texts={tags}\n            links={Array(tags.length).fill('/search')}\n            linkStates={tags.map(tag => ({tag: tag}))}\n          />\n        }\n        <PreviewDescription>\n          {excerpt && type === 'article' &&\n            <span>{excerpt}</span>\n          }\n          {description && type !== 'article' &&\n            <span>{description}</span>\n          }\n        </PreviewDescription>\n      </TextPreviewWrapper>\n    )\n  }\n}\n\nexport default TextPreview\n\nexport const componentQuery = graphql`\n  fragment TextPreviewFragment on MarkdownRemark {\n    id\n    timeToRead\n    excerpt(pruneLength: 140)\n    fields {\n      type\n      slug\n    }\n    frontmatter {\n      created\n      title\n      topic\n      icon\n      tags\n      description\n    }\n  }\n`\n"],"sourceRoot":""}
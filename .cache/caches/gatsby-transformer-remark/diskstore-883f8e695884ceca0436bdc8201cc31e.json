{"expireTime":9007200812892272000,"key":"transformer-remark-markdown-ast-eb85cc3ea73baaf1f883eb35bf78280f-gatsby-remark-autolink-headersgatsby-remark-imagesgatsby-remark-copy-linked-filesgatsby-remark-embed-videogatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-emojisgatsby-remark-external-links-/carsonkk.com","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"link","url":"#random-numbers","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Random Numbers","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":17,"offset":17},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":17,"offset":17},"indent":[]},"data":{"id":"random-numbers","htmlAttributes":{"id":"random-numbers"},"hProperties":{"id":"random-numbers"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"drngs","position":{"start":{"line":4,"column":3,"offset":21},"end":{"line":4,"column":8,"offset":26},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":10,"offset":28},"indent":[]}},{"type":"text","value":" is an evaluation of different algorithms commonly used to implement determinsic random number generators (also known as ","position":{"start":{"line":4,"column":10,"offset":28},"end":{"line":4,"column":131,"offset":149},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Pseudorandom_number_generator","children":[{"type":"text","value":"psuedorandom number generators","position":{"start":{"line":4,"column":132,"offset":150},"end":{"line":4,"column":162,"offset":180},"indent":[]}}],"position":{"start":{"line":4,"column":131,"offset":149},"end":{"line":4,"column":224,"offset":242},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"), which are often used indirectly by developers when implementing anything that relies on random behavior. Since \"true randomness\" can only be achieved at the ","position":{"start":{"line":4,"column":224,"offset":242},"end":{"line":4,"column":384,"offset":402},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Hardware_random_number_generator","children":[{"type":"text","value":"hardware level","position":{"start":{"line":4,"column":385,"offset":403},"end":{"line":4,"column":399,"offset":417},"indent":[]}}],"position":{"start":{"line":4,"column":384,"offset":402},"end":{"line":4,"column":464,"offset":482},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":", these pseudo-random algorithms do their best to create the illusion of randomness from some initial seed value, often through bit shifting and manipulation. This evaluation included looking at the Linear Congruential Generator, Blum-Blum-Shub, Rabian, RSA, Micali-Schnorr RSA, Power Generator, and Naor-Reingold algorithms, focusing on the speed of each algorithm in terms of both real-world time and CPU-cycles.","position":{"start":{"line":4,"column":464,"offset":482},"end":{"line":4,"column":878,"offset":896},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":878,"offset":896},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#a-better-random-number-generator","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"A Better Random Number Generator","position":{"start":{"line":6,"column":3,"offset":900},"end":{"line":6,"column":35,"offset":932},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":898},"end":{"line":6,"column":35,"offset":932},"indent":[]},"data":{"id":"a-better-random-number-generator","htmlAttributes":{"id":"a-better-random-number-generator"},"hProperties":{"id":"a-better-random-number-generator"}}},{"type":"paragraph","children":[{"type":"text","value":"An additional goal of this project was to produce a wrapper around C's standard library implementation of randomness (","position":{"start":{"line":8,"column":1,"offset":934},"end":{"line":8,"column":119,"offset":1052},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">rand()</code>","position":{"start":{"line":8,"column":119,"offset":1052},"end":{"line":8,"column":127,"offset":1060},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":8,"column":127,"offset":1060},"end":{"line":8,"column":132,"offset":1065},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">srand()</code>","position":{"start":{"line":8,"column":132,"offset":1065},"end":{"line":8,"column":141,"offset":1074},"indent":[]}},{"type":"text","value":") which would provide a more powerful and well-defined random number generator. This included things like mapping ","position":{"start":{"line":8,"column":141,"offset":1074},"end":{"line":8,"column":255,"offset":1188},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">rand()</code>","position":{"start":{"line":8,"column":255,"offset":1188},"end":{"line":8,"column":263,"offset":1196},"indent":[]}},{"type":"text","value":"'s output over a proper linear distribution to a user defined range, as well as a means to generate unique non-repeating sequences of random values from said range.","position":{"start":{"line":8,"column":263,"offset":1196},"end":{"line":8,"column":427,"offset":1360},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":934},"end":{"line":8,"column":427,"offset":1360},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":1,"offset":1361}}}}
{"data":{"allMarkdownRemark":null,"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"hecka-transactions"},"children":[{"type":"element","tagName":"a","properties":{"href":"#hecka-transactions","ariaHidden":true,"className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Hecka Transactions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"HeckaDBMS"}]},{"type":"text","value":" is a fully-implemented database management system written in C++. The top-down view of the system includes:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A command-line interface for issuing requests against the client. This includes both read and write requests, as well as the ability to launch concurrent requests"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A transaction manager which proxies the requests made by the client through one of the two available transaction protocols:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Strict 2PL"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Microsoft's "},{"type":"element","tagName":"a","properties":{"href":"http://vldb.org/pvldb/vol5/p298_per-akelarson_vldb2012.pdf","target":"_blank","rel":["nofollow","noopener","noreferrer"]},"children":[{"type":"text","value":"Optimistic Hekaton"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Data storage in the form of an in-memory key-value store with an interface agnostic of the transaction protocol utilized"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The system was designed to be evaluated on the basis of both how much the multi-threaded support helped when faced with heavy concurrent transaction loads, as well as how the system handled various read/write loads. The results of this evaluation compared Strict 2PL against Microsoft's own protocol in order to pinpoint the tradeoffs made with their design."}]}],"data":{"quirksMode":false}},"fields":{"slug":"/projects/hecka-dbms"},"frontmatter":{"banner":null,"logo":null,"title":"HeckaDBMS","description":"DBMS stack including storage, two transaction proccessing protocols, and a client for submitting requests","created":"2018-09-01","updated":"2018-10-09","feature":null,"draft":null,"tags":["HeckaDBMS","C Plus Plus","Databases"],"github":"carsonkk/HeckaDBMS","website":null,"allowCropping":null,"transparentBanner":null,"transparentLogo":null,"misc":null}}},"pageContext":{"slug":"/projects/hecka-dbms","targetTag":"/hecka-dbms/"}}